//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18052
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.WcfDecrypt {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfDecrypt.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EncryptDecrypt", ReplyAction="http://tempuri.org/IService1/EncryptDecryptResponse")]
        void EncryptDecrypt(string chaine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EncryptDecrypt", ReplyAction="http://tempuri.org/IService1/EncryptDecryptResponse")]
        System.Threading.Tasks.Task EncryptDecryptAsync(string chaine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/authentification", ReplyAction="http://tempuri.org/IService1/authentificationResponse")]
        System.Data.DataSet authentification(string rows, string login, string mdp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/authentification", ReplyAction="http://tempuri.org/IService1/authentificationResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> authentificationAsync(string rows, string login, string mdp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/envoiMail", ReplyAction="http://tempuri.org/IService1/envoiMailResponse")]
        bool envoiMail(string adressMailReceiver, string subject, string body);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/envoiMail", ReplyAction="http://tempuri.org/IService1/envoiMailResponse")]
        System.Threading.Tasks.Task<bool> envoiMailAsync(string adressMailReceiver, string subject, string body);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/generatePdf", ReplyAction="http://tempuri.org/IService1/generatePdfResponse")]
        bool generatePdf(string titre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/generatePdf", ReplyAction="http://tempuri.org/IService1/generatePdfResponse")]
        System.Threading.Tasks.Task<bool> generatePdfAsync(string titre);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Client.WcfDecrypt.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Client.WcfDecrypt.IService1>, Client.WcfDecrypt.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void EncryptDecrypt(string chaine) {
            base.Channel.EncryptDecrypt(chaine);
        }
        
        public System.Threading.Tasks.Task EncryptDecryptAsync(string chaine) {
            return base.Channel.EncryptDecryptAsync(chaine);
        }
        
        public System.Data.DataSet authentification(string rows, string login, string mdp) {
            return base.Channel.authentification(rows, login, mdp);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> authentificationAsync(string rows, string login, string mdp) {
            return base.Channel.authentificationAsync(rows, login, mdp);
        }
        
        public bool envoiMail(string adressMailReceiver, string subject, string body) {
            return base.Channel.envoiMail(adressMailReceiver, subject, body);
        }
        
        public System.Threading.Tasks.Task<bool> envoiMailAsync(string adressMailReceiver, string subject, string body) {
            return base.Channel.envoiMailAsync(adressMailReceiver, subject, body);
        }
        
        public bool generatePdf(string titre) {
            return base.Channel.generatePdf(titre);
        }
        
        public System.Threading.Tasks.Task<bool> generatePdfAsync(string titre) {
            return base.Channel.generatePdfAsync(titre);
        }
    }
}
